%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/t265/imu"
image0_topic: "/t265/image_left"
image1_topic: "/t265/image_right"
output_path: "~/output/"

cam0_calib: "t265_left.yaml"
cam1_calib: "t265_right.yaml"
image_width: 848
image_height: 800
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   # data: [-0.9999790195296183, -0.0012594392809634862, -0.006354078476344758, 0.008476502835657655,
   #         0.0011286433084974046, -0.9997882648566203, 0.02054632860813456, 0.0035762499334610494,
   #        -0.006378609947956183, 0.02053872604834172, 0.999768710286257, -0.0014819593587566723,
   #         0, 0, 0, 1]
   data: [-0.99997902,  0.00112864, -0.00637861, 0.00846284, 
          -0.00125944, -0.99978826,  0.02053873, 0.00361661, 
          -0.00635408,  0.02054633,  0.99976871, 0.001462,  
           0.0        , 0.0        , 0.0       , 1.0]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   # data: [-0.9999165888734343, 0.0056269671568607085, -0.011625512304009922, -0.05501547933647262,
   #        -0.0058337921811406, -0.9998239426126609, 0.01783397452228225, 0.004044213219087346,
   #        -0.01152311435777403, 0.017900307793157096, 0.9997733727282437, -0.0023342526866441202,
   #        0, 0, 0, 1]
   data: [-0.99991659, -0.00583379, -0.01152311, -0.0550142 ,  
           0.00562697, -0.99982394,  0.01790031,  0.00439486, 
          -0.01162551,  0.01783397,  0.99977337,  0.00162202,  
           0.0       ,  0.0       ,  0.0       ,  1.0]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.17406273886926244     # accelerometer measurement noise standard deviation. 
gyr_n: 0.03235643391462107     # gyroscope measurement noise standard deviation.     
acc_w: 0.012393508837042726     # accelerometer bias random work noise standard deviation.  
gyr_w: 7.056778665898092e-05    # gyroscope bias random work noise standard deviation.     
g_norm: 9.81007                 # gravity magnitude

#unsynchronization parameters
estimate_td: 0.010501625380016148   # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0                   # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/"  # save and load path
save_image: 1                                 # save image in pose graph for visualization prupose; you can close this function by setting 0 