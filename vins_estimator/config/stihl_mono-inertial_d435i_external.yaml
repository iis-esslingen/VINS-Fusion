%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1

imu_topic: "/vn100/imu"
image0_topic: "/d435i/rgb_image"
output_path: "~/output/"

cam0_calib: "d435i.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
#    data: [-0.01380329, -0.99970536, -0.01996662,  0.1947993,
#            -0.00268973,  0.02000556, -0.99979625, -0.01923449,
#            0.99990111, -0.01374677, -0.00296508, -0.39005011,
#            0.,          0.,          0.,          1.]
   data: [-0.01380329, -0.99970536, -0.01996662,  0.1947993,
         -0.00268973,  0.02000556, -0.99979625, -0.01923449,
         0.99990111, -0.01374677, -0.00296508, -0.39005011,
         0.,          0.,          0.,          1.        ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 300            # max feature number in feature tracking
min_dist: 15            # min distance between two features 
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.08  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.022943696261362133     # accelerometer measurement noise standard deviation. 
gyr_n: 0.0010803000133061877     # gyroscope measurement noise standard deviation.     
acc_w: 0.003183408958479904     # accelerometer bias random work noise standard deviation.  
gyr_w: 2.094774838616867e-04    # gyroscope bias random work noise standard deviation.    
g_norm: 9.81007                 # gravity magnitude

#unsynchronization parameters
estimate_td: 0.010289852891593447   # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0                   # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/"  # save and load path
save_image: 1                                 # save image in pose graph for visualization prupose; you can close this function by setting 0 