%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/vn100/imu"
image0_topic: "/t265/image_left"
image1_topic: "/t265/image_right"
output_path: "~/output/"

cam0_calib: "t265_left.yaml"
cam1_calib: "t265_right.yaml"
image_width: 848
image_height: 800
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [-0.0023248,  -0.03687035,  0.99931735,  0.39625852,
          -0.99999419, -0.00240487, -0.0024151,  -0.0611419, 
           0.00249228, -0.99931716, -0.03686454,  0.00348678,
           0.,          0.,          0.,          1.        ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [-0.00719255, -0.03955177,  0.99919164,  0.39672263,
          -0.99992738, -0.00937789, -0.00756905, -0.1246146, 
           0.00966968, -0.99917351, -0.03948145,  0.00446942,
           0.,          0.,          0.,          1.        ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 0                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.0022943696261362133     # accelerometer measurement noise standard deviation. 
gyr_n: 0.00010803000133061877     # gyroscope measurement noise standard deviation.     
acc_w: 0.0001591704479239952     # accelerometer bias random work noise standard deviation.  
gyr_w: 1.0473874193084336e-06    # gyroscope bias random work noise standard deviation.     
g_norm: 9.81007                 # gravity magnitude

#unsynchronization parameters
estimate_td: 0.010289852891593447   # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0                   # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/"  # save and load path
save_image: 1                                 # save image in pose graph for visualization prupose; you can close this function by setting 0 